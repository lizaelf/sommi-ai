// public/wine-storage.js - IndexedDB storage for wine data

class WineStorage {
  constructor() {
    this.db = null;
    this.dbName = 'wineSommelierDB';
    this.dbVersion = 1;
  }

  // Initialize the database
  async initDB() {
    return new Promise((resolve, reject) => {
      const request = indexedDB.open(this.dbName, this.dbVersion);
      
      request.onupgradeneeded = (event) => {
        const db = event.target.result;
        
        // Create object store for wine bottles if it doesn't exist
        if (!db.objectStoreNames.contains('wines')) {
          const wineStore = db.createObjectStore('wines', { keyPath: 'id' });
          wineStore.createIndex('scanDate', 'scanDate', { unique: false });
          wineStore.createIndex('wineType', 'wineType', { unique: false });
        }
        
        // Create object store for wine notes
        if (!db.objectStoreNames.contains('notes')) {
          const notesStore = db.createObjectStore('notes', { keyPath: 'wineId' });
        }
      };
      
      request.onsuccess = (event) => {
        this.db = event.target.result;
        console.log('Wine database initialized successfully');
        resolve(this.db);
      };
      
      request.onerror = (event) => {
        console.error('Error initializing wine database:', event.target.error);
        reject(event.target.error);
      };
    });
  }

  // Add a new wine from QR code scan
  async addWine(wineData) {
    // Generate a unique ID if not provided by QR
    const id = wineData.id || `wine_${Date.now()}`;
    
    const wine = {
      id,
      name