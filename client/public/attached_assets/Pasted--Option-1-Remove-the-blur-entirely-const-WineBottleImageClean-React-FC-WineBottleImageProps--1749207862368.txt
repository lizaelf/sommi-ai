// Option 1: Remove the blur entirely
const WineBottleImageClean: React.FC<WineBottleImageProps> = ({
  image,
  wineName,
}) => {
  return (
    <div
      className="wine-bottle-image"
      style={{
        position: "relative",
        marginBottom: "40px",
        marginTop: "20px",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "transparent",
      }}
    >
      <img
        src={image && image.trim() && image.startsWith("/@assets/") ? image : placeholderImage}
        alt={wineName || "Wine"}
        style={{
          height: "280px",
          // Add a subtle drop shadow instead of blur
          filter: "drop-shadow(0 10px 30px rgba(0, 0, 0, 0.2))",
        }}
        onLoad={() => console.log(`Wine bottle image loaded: ${wineName}`)}
        onError={(e) => {
          console.error(`Wine bottle image failed to load: ${wineName}`);
          (e.target as HTMLImageElement).src = placeholderImage;
        }}
      />
    </div>
  );
};

// Option 2: Use a gradient instead of solid color blur
const WineBottleImageGradient: React.FC<WineBottleImageProps> = ({
  image,
  wineName,
}) => {
  return (
    <div
      className="wine-bottle-image"
      style={{
        position: "relative",
        marginBottom: "40px",
        marginTop: "20px",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "transparent",
      }}
    >
      {/* Radial gradient glow - no blur */}
      <div
        style={{
          position: "absolute",
          width: "300px",
          height: "300px",
          borderRadius: "50%",
          background: "radial-gradient(circle, rgba(255,255,255,0.15) 0%, transparent 60%)",
          zIndex: 0,
          top: "50%",
          left: "50%",
          transform: "translate(-50%, -50%)",
        }}
      />
      
      <img
        src={image && image.trim() && image.startsWith("/@assets/") ? image : placeholderImage}
        alt={wineName || "Wine"}
        style={{
          height: "280px",
          position: "relative",
          zIndex: 1,
        }}
        onLoad={() => console.log(`Wine bottle image loaded: ${wineName}`)}
        onError={(e) => {
          console.error(`Wine bottle image failed to load: ${wineName}`);
          (e.target as HTMLImageElement).src = placeholderImage;
        }}
      />
    </div>
  );
};

// Option 3: Put the blur ONLY behind non-transparent parts
const WineBottleImageMasked: React.FC<WineBottleImageProps> = ({
  image,
  wineName,
}) => {
  return (
    <div
      className="wine-bottle-image"
      style={{
        position: "relative",
        marginBottom: "40px",
        marginTop: "20px",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "transparent",
        // Add white background just to the container
        padding: "20px",
        borderRadius: "20px",
      }}
    >
      <img
        src={image && image.trim() && image.startsWith("/@assets/") ? image : placeholderImage}
        alt={wineName || "Wine"}
        style={{
          height: "280px",
          position: "relative",
          zIndex: 1,
          // This creates a glow effect without affecting transparency
          filter: "drop-shadow(0 0 20px rgba(255, 255, 255, 0.2))",
        }}
        onLoad={() => console.log(`Wine bottle image loaded: ${wineName}`)}
        onError={(e) => {
          console.error(`Wine bottle image failed to load: ${wineName}`);
          (e.target as HTMLImageElement).src = placeholderImage;
        }}
      />
    </div>
  );
};

// Option 4: Debug version to see what's happening
const WineBottleImageDebug: React.FC<WineBottleImageProps> = ({
  image,
  wineName,
}) => {
  return (
    <div
      className="wine-bottle-image"
      style={{
        position: "relative",
        marginBottom: "40px",
        marginTop: "20px",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        // Temporarily add white background to see transparency
        backgroundColor: "white",
        padding: "20px",
        borderRadius: "10px",
      }}
    >
      <img
        src={image && image.trim() && image.startsWith("/@assets/") ? image : placeholderImage}
        alt={wineName || "Wine"}
        style={{
          height: "280px",
        }}
        onLoad={() => console.log(`Wine bottle image loaded: ${wineName}`)}
        onError={(e) => {
          console.error(`Wine bottle image failed to load: ${wineName}`);
          (e.target as HTMLImageElement).src = placeholderImage;
        }}
      />
    </div>
  );
};